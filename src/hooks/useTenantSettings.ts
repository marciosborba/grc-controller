import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { useAuth} from '@/contexts/AuthContextOptimized';
import { useTenantSecurity } from '@/utils/tenantSecurity';

export interface RiskMatrixConfig {
  type: '3x3' | '4x4' | '5x5';
  risk_levels: {
    low: number[];
    medium: number[];
    high: number[];
    critical?: number[];
  };
  impact_labels: string[];
  likelihood_labels: string[];
}

export interface SIQuestion {
  question: string;
  answer_options: string[];
}

export interface SIQuestionnaireConfig {
  probability_questions: SIQuestion[];
  impact_questions: SIQuestion[];
}

export interface SupplierQuestionnaireConfig {
  probability_questions: SIQuestion[];
  impact_questions: SIQuestion[];
}

export interface TenantSettings {
  risk_matrix: RiskMatrixConfig;
  company_data?: any;
  theme_config?: any;
  si_questionnaire?: SIQuestionnaireConfig;
  supplier_questionnaire?: SupplierQuestionnaireConfig;
}

export const useTenantSettings = (specificTenantId?: string) => {
  const { user } = useAuth();
  const { userTenantId } = useTenantSecurity();
  
  // Usar o tenantId espec√≠fico se fornecido, sen√£o usar o do usu√°rio
  const targetTenantId = specificTenantId || userTenantId;

  const {
    data: tenantSettings,
    isLoading,
    error,
    refetch
  } = useQuery({
    queryKey: ['tenant-settings', targetTenantId],
    queryFn: async (): Promise<TenantSettings> => {
      if (!targetTenantId) {
        throw new Error('Tenant ID n√£o encontrado');
      }

      console.log('üîç Fetching tenant settings for:', targetTenantId);

      const { data, error } = await supabase
        .from('tenants')
        .select('settings')
        .eq('id', targetTenantId)
        .single();

      if (error) {
        console.error('‚ùå Error fetching tenant settings:', error);
        throw error;
      }

      console.log('‚úÖ Tenant settings loaded:', data.settings);

      // Se n√£o h√° configura√ß√£o de matriz de risco, usar padr√£o 5x5
      const settings = data.settings as TenantSettings;
      if (!settings.risk_matrix) {
        console.log('‚ö†Ô∏è No risk matrix config found, using 5x5 default');
        return {
          risk_matrix: {
            type: '5x5',
            risk_levels: {
              low: [1, 2, 3, 5, 6],
              medium: [4, 7, 8, 9, 10, 11],
              high: [12, 13, 14, 15, 16, 17, 18],
              critical: [19, 20, 21, 22, 23, 24, 25]
            },
            impact_labels: ['Insignificante', 'Menor', 'Moderado', 'Maior', 'Catastr√≥fico'],
            likelihood_labels: ['Raro', 'Improv√°vel', 'Poss√≠vel', 'Prov√°vel', 'Quase Certo']
          }
        };
      }

      // Se a configura√ß√£o existe mas n√£o tem o tipo definido, inferir baseado nas labels
      if (settings.risk_matrix && !settings.risk_matrix.type) {
        const labelCount = settings.risk_matrix.impact_labels?.length || 5;
        if (labelCount === 3) {
          settings.risk_matrix.type = '3x3';
        } else if (labelCount === 4) {
          settings.risk_matrix.type = '4x4';
        } else {
          settings.risk_matrix.type = '5x5';
        }
      }
      
      return settings;
    },
    enabled: !!user && !!targetTenantId,
    staleTime: 5 * 60 * 1000, // 5 minutos
    gcTime: 10 * 60 * 1000 // 10 minutos
  });

  // Fun√ß√£o para calcular o n√≠vel de risco baseado na configura√ß√£o do tenant
  const calculateRiskLevel = (probability: number, impact: number): 'Muito Baixo' | 'Baixo' | 'M√©dio' | 'Alto' | 'Muito Alto' | 'Cr√≠tico' => {
    if (!tenantSettings?.risk_matrix) {
      // Fallback para 5x5 usando as faixas da matriz verdadeira
      const score = probability * impact;
      if (score >= 19) return 'Muito Alto'; // critical: [19-25]
      if (score >= 12) return 'Alto';       // high: [12-18]
      if (score >= 4) return 'M√©dio';       // medium: [4,7-11]
      if (score >= 1) return 'Baixo';       // low: [1-3,5-6]
      return 'Muito Baixo';
    }

    const { risk_matrix } = tenantSettings;
    const score = probability * impact;

    // Para matriz 3x3, n√£o h√° n√≠vel cr√≠tico
    if (risk_matrix.type === '3x3') {
      if (risk_matrix.risk_levels.high.includes(score)) return 'Alto';
      if (risk_matrix.risk_levels.medium.includes(score)) return 'M√©dio';
      if (risk_matrix.risk_levels.low.includes(score)) return 'Baixo';
      return 'Baixo';
    }

    // Para matrizes 4x4 e 5x5
    if (risk_matrix.risk_levels.critical && risk_matrix.risk_levels.critical.includes(score)) {
      return 'Cr√≠tico';
    }
    if (risk_matrix.risk_levels.high.includes(score)) return 'Alto';
    if (risk_matrix.risk_levels.medium.includes(score)) return 'M√©dio';
    if (risk_matrix.risk_levels.low.includes(score)) return 'Baixo';
    
    return risk_matrix.type === '4x4' ? 'Baixo' : 'Muito Baixo';
  };

  // Fun√ß√£o para obter as labels da matriz
  const getMatrixLabels = () => {
    if (!tenantSettings?.risk_matrix) {
      return {
        impact: ['Muito Baixo', 'Baixo', 'M√©dio', 'Alto', 'Muito Alto'],
        likelihood: ['Muito Baixo', 'Baixo', 'M√©dio', 'Alto', 'Muito Alto']
      };
    }

    return {
      impact: tenantSettings.risk_matrix.impact_labels,
      likelihood: tenantSettings.risk_matrix.likelihood_labels
    };
  };

  // Fun√ß√£o para obter as dimens√µes da matriz
  const getMatrixDimensions = () => {
    if (!tenantSettings?.risk_matrix) {
      return { rows: 5, cols: 5 };
    }

    const { type } = tenantSettings.risk_matrix;
    if (type === '3x3') {
      return { rows: 3, cols: 3 };
    } else if (type === '4x4') {
      return { rows: 4, cols: 4 };
    }
    return { rows: 5, cols: 5 };
  };

  // Fun√ß√£o para obter os n√≠veis de risco corretos
  const getRiskLevels = () => {
    if (!tenantSettings?.risk_matrix) {
      return ['Baixo', 'M√©dio', 'Alto', 'Cr√≠tico']; // Usar padr√£o 5x5 com Cr√≠tico
    }

    const { type } = tenantSettings.risk_matrix;
    if (type === '4x4') {
      return ['Baixo', 'M√©dio', 'Alto', 'Cr√≠tico'];
    } else if (type === '3x3') {
      return ['Baixo', 'M√©dio', 'Alto'];
    }
    return ['Baixo', 'M√©dio', 'Alto', 'Cr√≠tico']; // 5x5 tamb√©m usa Cr√≠tico
  };

  // Fun√ß√£o para obter configura√ß√£o do question√°rio SI
  const getSIQuestionnaireConfig = (): SIQuestionnaireConfig => {
    if (tenantSettings?.si_questionnaire) {
      return tenantSettings.si_questionnaire;
    }
    
    // Configura√ß√£o padr√£o se n√£o existir
    const defaultAnswers = ['Muito Baixo', 'Baixo', 'M√©dio', 'Alto', 'Muito Alto'];
    
    return {
      probability_questions: [
        {
          question: 'Com que frequ√™ncia eventos similares j√° ocorreram na organiza√ß√£o?',
          answer_options: ['Nunca', 'Raramente', 'Ocasionalmente', 'Frequentemente', 'Constantemente', 'N√£o se aplica']
        },
        {
          question: 'Qual √© a qualidade dos controles preventivos existentes?',
          answer_options: ['Excelente', 'Boa', 'Regular', 'Ruim', 'Inexistente', 'N√£o se aplica']
        },
        {
          question: 'Qu√£o complexo √© o processo ou sistema envolvido?',
          answer_options: ['Muito Simples', 'Simples', 'Moderado', 'Complexo', 'Muito Complexo', 'N√£o se aplica']
        },
        {
          question: 'Qual √© o n√≠vel de depend√™ncia de fatores externos?',
          answer_options: ['Nenhuma', 'Baixa', 'M√©dia', 'Alta', 'Total', 'N√£o se aplica']
        },
        {
          question: 'Como √© a capacita√ß√£o da equipe respons√°vel?',
          answer_options: ['Excelente', 'Boa', 'Regular', 'Insuficiente', 'Inadequada', 'N√£o se aplica']
        },
        {
          question: 'Qual √© a estabilidade do ambiente tecnol√≥gico?',
          answer_options: ['Muito Est√°vel', 'Est√°vel', 'Moderado', 'Inst√°vel', 'Muito Inst√°vel', 'N√£o se aplica']
        },
        {
          question: 'Existem mudan√ßas frequentes nos processos?',
          answer_options: ['Nunca', 'Raramente', 'Ocasionalmente', 'Frequentemente', 'Constantemente', 'N√£o se aplica']
        },
        {
          question: 'Qual √© o n√≠vel de monitoramento e detec√ß√£o?',
          answer_options: ['Excelente', 'Bom', 'Regular', 'Ruim', 'Inexistente', 'N√£o se aplica']
        }
      ],
      impact_questions: [
        {
          question: 'Qual seria o impacto financeiro direto?',
          answer_options: ['< R$ 1.000', 'R$ 1.000 - R$ 10.000', 'R$ 10.000 - R$ 100.000', 'R$ 100.000 - R$ 1.000.000', '> R$ 1.000.000', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria a reputa√ß√£o da organiza√ß√£o?',
          answer_options: ['Nenhum impacto', 'Impacto local', 'Impacto regional', 'Impacto nacional', 'Impacto internacional', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o impacto nas opera√ß√µes di√°rias?',
          answer_options: ['Nenhuma interrup√ß√£o', '< 1 hora', '1-4 horas', '4-24 horas', '> 24 horas', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria o atendimento aos clientes?',
          answer_options: ['Nenhum impacto', 'Poucos clientes', 'Alguns clientes', 'Muitos clientes', 'Todos os clientes', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o impacto regulat√≥rio/legal?',
          answer_options: ['Nenhum', 'Advert√™ncia', 'Multa leve', 'Multa pesada', 'Processo judicial', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria a seguran√ßa da informa√ß√£o?',
          answer_options: ['Nenhum vazamento', 'Dados internos', 'Dados de clientes', 'Dados sens√≠veis', 'Dados cr√≠ticos', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o impacto nos colaboradores?',
          answer_options: ['Nenhum', 'Desconforto', 'Estresse', 'Demiss√µes', 'Acidentes', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria os objetivos estrat√©gicos?',
          answer_options: ['Nenhum impacto', 'Atraso m√≠nimo', 'Atraso moderado', 'Atraso significativo', 'Inviabiliza√ß√£o', 'N√£o se aplica']
        }
      ]
    };
  };

  // Fun√ß√£o para obter configura√ß√£o do question√°rio de Fornecedores
  const getSupplierQuestionnaireConfig = (): SupplierQuestionnaireConfig => {
    if (tenantSettings?.supplier_questionnaire) {
      return tenantSettings.supplier_questionnaire;
    }
    
    // Configura√ß√£o padr√£o para Risco de Fornecedor
    return {
      probability_questions: [
        {
          question: 'Qual √© o hist√≥rico de desempenho do fornecedor?',
          answer_options: ['Excelente', 'Bom', 'Regular', 'Ruim', 'P√©ssimo', 'N√£o se aplica']
        },
        {
          question: 'Como √© a estabilidade financeira do fornecedor?',
          answer_options: ['Muito Est√°vel', 'Est√°vel', 'Moderada', 'Inst√°vel', 'Cr√≠tica', 'N√£o se aplica']
        },
        {
          question: 'Qual √© o n√≠vel de depend√™ncia deste fornecedor?',
          answer_options: ['Baixa', 'Moderada', 'Alta', 'Cr√≠tica', 'Exclusiva', 'N√£o se aplica']
        },
        {
          question: 'Como √© a localiza√ß√£o geogr√°fica do fornecedor?',
          answer_options: ['Local', 'Regional', 'Nacional', 'Internacional', 'Alto Risco Geogr√°fico', 'N√£o se aplica']
        },
        {
          question: 'Qual √© a qualidade dos controles de seguran√ßa do fornecedor?',
          answer_options: ['Excelente', 'Boa', 'Regular', 'Insuficiente', 'Inadequada', 'N√£o se aplica']
        },
        {
          question: 'Como √© a capacidade de recupera√ß√£o do fornecedor?',
          answer_options: ['Muito Alta', 'Alta', 'M√©dia', 'Baixa', 'Muito Baixa', 'N√£o se aplica']
        },
        {
          question: 'Qual √© o n√≠vel de compliance regulat√≥rio do fornecedor?',
          answer_options: ['Totalmente Aderente', 'Aderente', 'Parcialmente Aderente', 'N√£o Aderente', 'Desconhecido', 'N√£o se aplica']
        },
        {
          question: 'Como √© a transpar√™ncia e comunica√ß√£o do fornecedor?',
          answer_options: ['Excelente', 'Boa', 'Regular', 'Ruim', 'P√©ssima', 'N√£o se aplica']
        }
      ],
      impact_questions: [
        {
          question: 'Qual seria o impacto financeiro de uma interrup√ß√£o?',
          answer_options: ['< R$ 10.000', 'R$ 10.000 - R$ 100.000', 'R$ 100.000 - R$ 1.000.000', 'R$ 1.000.000 - R$ 10.000.000', '> R$ 10.000.000', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria a continuidade das opera√ß√µes?',
          answer_options: ['Sem impacto', 'Atraso m√≠nimo', 'Interrup√ß√£o parcial', 'Interrup√ß√£o total', 'Paralisa√ß√£o prolongada', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o impacto na qualidade dos produtos/servi√ßos?',
          answer_options: ['Nenhum', 'Leve degrada√ß√£o', 'Degrada√ß√£o moderada', 'Degrada√ß√£o severa', 'Falha total', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria o relacionamento com clientes?',
          answer_options: ['Sem impacto', 'Insatisfa√ß√£o leve', 'Insatisfa√ß√£o moderada', 'Perda de clientes', 'Perda massiva de clientes', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o impacto regulat√≥rio e legal?',
          answer_options: ['Nenhum', 'Notifica√ß√£o', 'Multa leve', 'Multa pesada', 'Processo judicial', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria a reputa√ß√£o da empresa?',
          answer_options: ['Sem impacto', 'Impacto local', 'Impacto setorial', 'Impacto nacional', 'Impacto internacional', 'N√£o se aplica']
        },
        {
          question: 'Qual seria o tempo para encontrar fornecedor alternativo?',
          answer_options: ['< 1 semana', '1-4 semanas', '1-3 meses', '3-12 meses', '> 12 meses', 'N√£o se aplica']
        },
        {
          question: 'Como afetaria a seguran√ßa da informa√ß√£o?',
          answer_options: ['Sem risco', 'Risco baixo', 'Risco moderado', 'Risco alto', 'Risco cr√≠tico', 'N√£o se aplica']
        }
      ]
    };
  };

  // Fun√ß√£o para salvar configura√ß√£o do question√°rio SI
  const saveSIQuestionnaireConfig = async (config: SIQuestionnaireConfig) => {
    if (!targetTenantId) {
      throw new Error('Tenant ID n√£o encontrado');
    }

    const updatedSettings = {
      ...tenantSettings,
      si_questionnaire: config
    };

    const { error } = await supabase
      .from('tenants')
      .update({ 
        settings: updatedSettings,
        updated_at: new Date().toISOString()
      })
      .eq('id', targetTenantId);

    if (error) {
      throw error;
    }

    // Recarregar configura√ß√µes
    await refetch();
  };

  // Fun√ß√£o para salvar configura√ß√£o do question√°rio de Fornecedores
  const saveSupplierQuestionnaireConfig = async (config: SupplierQuestionnaireConfig) => {
    if (!targetTenantId) {
      throw new Error('Tenant ID n√£o encontrado');
    }

    const updatedSettings = {
      ...tenantSettings,
      supplier_questionnaire: config
    };

    const { error } = await supabase
      .from('tenants')
      .update({ 
        settings: updatedSettings,
        updated_at: new Date().toISOString()
      })
      .eq('id', targetTenantId);

    if (error) {
      throw error;
    }

    // Recarregar configura√ß√µes
    await refetch();
  };

  return {
    tenantSettings,
    isLoading,
    error,
    refetch,
    calculateRiskLevel,
    getMatrixLabels,
    getMatrixDimensions,
    getRiskLevels,
    getSIQuestionnaireConfig,
    saveSIQuestionnaireConfig,
    getSupplierQuestionnaireConfig,
    saveSupplierQuestionnaireConfig,
    isMatrix4x4: tenantSettings?.risk_matrix?.type === '4x4',
    isMatrix5x5: tenantSettings?.risk_matrix?.type === '5x5'
  };
};