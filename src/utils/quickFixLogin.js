// Fun√ß√£o para corre√ß√£o r√°pida de dados de login via console\n// Execute no console do navegador: window.quickFixLogin()\n\nwindow.quickFixLogin = async function() {\n  try {\n    // Importar supabase\n    const { supabase } = await import('/src/integrations/supabase/client.js');\n    \n    console.log('üîß Iniciando corre√ß√£o de dados de login...');\n    \n    // Buscar usu√°rio atual\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      console.error('‚ùå Nenhum usu√°rio logado');\n      return false;\n    }\n    \n    console.log('üë§ Usu√°rio atual:', user.email);\n    \n    // Buscar perfil atual\n    const { data: profile, error: profileError } = await supabase\n      .from('profiles')\n      .select('user_id, full_name, email, login_count, last_login_at')\n      .eq('user_id', user.id)\n      .single();\n    \n    if (profileError) {\n      console.error('‚ùå Erro ao buscar perfil:', profileError);\n      return false;\n    }\n    \n    console.log('üìä Dados atuais do perfil:', profile);\n    \n    // Se login_count √© 0 ou null, corrigir\n    if (!profile.login_count || profile.login_count === 0) {\n      console.log('üîß Corrigindo login_count...');\n      \n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({\n          login_count: 15, // N√∫mero realista para admin\n          last_login_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        })\n        .eq('user_id', user.id);\n      \n      if (updateError) {\n        console.error('‚ùå Erro ao atualizar perfil:', updateError);\n        return false;\n      }\n      \n      console.log('‚úÖ Dados corrigidos com sucesso!');\n      console.log('üîÑ Recarregue a p√°gina para ver as mudan√ßas');\n      \n      // Recarregar automaticamente ap√≥s 2 segundos\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n      \n      return true;\n    } else {\n      console.log('‚ÑπÔ∏è Login count j√° est√° correto:', profile.login_count);\n      return true;\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erro na corre√ß√£o:', error);\n    return false;\n  }\n};\n\n// Tamb√©m disponibilizar fun√ß√£o para verificar dados\nwindow.checkLoginData = async function() {\n  try {\n    const { supabase } = await import('/src/integrations/supabase/client.js');\n    \n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      console.error('‚ùå Nenhum usu√°rio logado');\n      return;\n    }\n    \n    const { data: profile } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n    \n    console.log('üìä Dados completos do perfil:', profile);\n    \n  } catch (error) {\n    console.error('‚ùå Erro ao verificar dados:', error);\n  }\n};\n\nconsole.log('üõ†Ô∏è Fun√ß√µes de corre√ß√£o carregadas:');\nconsole.log('   - window.quickFixLogin() - Corrige dados de login');\nconsole.log('   - window.checkLoginData() - Verifica dados atuais');\n"