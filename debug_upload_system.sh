#!/bin/bash\n\necho \"=== 🔍 DEBUG COMPLETO DO SISTEMA DE UPLOAD ===\"\necho \"⏰ Timestamp: $(date -Iseconds)\"\necho \"\"\n\n# 1. Verificar containers\necho \"📦 ETAPA 1: Verificando containers do Supabase...\"\ndocker ps --filter \"name=supabase\" --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\necho \"\"\n\n# 2. Verificar banco de dados\necho \"🗄️ ETAPA 2: Verificando configuração do banco...\"\necho \"Buckets de storage:\"\npsql \"postgresql://postgres:postgres@localhost:54322/postgres\" -c \"SELECT id, name, public, owner, created_at FROM storage.buckets;\"\necho \"\"\n\necho \"Políticas RLS:\"\npsql \"postgresql://postgres:postgres@localhost:54322/postgres\" -c \"SELECT schemaname, tablename, policyname, permissive, roles, cmd, with_check FROM pg_policies WHERE tablename = 'objects' AND schemaname = 'storage';\"\necho \"\"\n\necho \"Arquivos no bucket policy-documents:\"\npsql \"postgresql://postgres:postgres@localhost:54322/postgres\" -c \"SELECT name, bucket_id, owner, created_at, updated_at FROM storage.objects WHERE bucket_id = 'policy-documents' ORDER BY created_at DESC LIMIT 10;\"\necho \"\"\n\n# 3. Testar API de storage\necho \"🌐 ETAPA 3: Testando API de storage...\"\necho \"Testando listagem de buckets:\"\ncurl -s \"http://localhost:54321/storage/v1/bucket\" \\\n  -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\" \\\n  | jq '.' 2>/dev/null || echo \"Erro ao listar buckets\"\necho \"\"\n\necho \"Testando upload de arquivo de teste:\"\necho \"Conteúdo de teste para debug\" > /tmp/test-upload-debug.txt\ncurl -X POST \"http://localhost:54321/storage/v1/object/policy-documents/debug-test-$(date +%s).txt\" \\\n  -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\" \\\n  -H \"Content-Type: text/plain\" \\\n  --data-binary @/tmp/test-upload-debug.txt\necho \"\"\necho \"\"\n\n# 4. Verificar logs dos containers\necho \"📋 ETAPA 4: Verificando logs recentes...\"\necho \"Logs do container de storage (últimas 10 linhas):\"\ndocker logs --tail 10 supabase_storage_myxvxponlmulnjstbjwd 2>/dev/null || echo \"Erro ao obter logs do storage\"\necho \"\"\n\necho \"Logs do container de auth (últimas 5 linhas):\"\ndocker logs --tail 5 supabase_auth_myxvxponlmulnjstbjwd 2>/dev/null || echo \"Erro ao obter logs do auth\"\necho \"\"\n\n# 5. Verificar conectividade\necho \"🔗 ETAPA 5: Verificando conectividade...\"\necho \"Testando conexão com API do Supabase:\"\ncurl -s -o /dev/null -w \"Status: %{http_code}, Tempo: %{time_total}s\\n\" \"http://localhost:54321/rest/v1/\" \\\n  -H \"apikey: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\"\n\necho \"Testando conexão com Storage API:\"\ncurl -s -o /dev/null -w \"Status: %{http_code}, Tempo: %{time_total}s\\n\" \"http://localhost:54321/storage/v1/bucket\" \\\n  -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\"\necho \"\"\n\n# 6. Verificar configuração do frontend\necho \"⚛️ ETAPA 6: Verificando configuração do frontend...\"\necho \"Arquivo .env.local:\"\nif [ -f \".env.local\" ]; then\n  grep -E \"VITE_SUPABASE|SUPABASE\" .env.local | head -5\nelse\n  echo \"Arquivo .env.local não encontrado\"\nfi\necho \"\"\n\necho \"Processo do frontend:\"\nps aux | grep -E \"(vite|npm|node)\" | grep -v grep | head -3\necho \"\"\n\necho \"=== 🏁 FIM DO DEBUG COMPLETO ===\"\necho \"📊 Resumo:\"\necho \"- Containers: $(docker ps --filter 'name=supabase' --format '{{.Names}}' | wc -l) rodando\"\necho \"- Buckets: $(psql 'postgresql://postgres:postgres@localhost:54322/postgres' -t -c 'SELECT COUNT(*) FROM storage.buckets;' 2>/dev/null | tr -d ' ' || echo '?')\"\necho \"- Políticas RLS: $(psql 'postgresql://postgres:postgres@localhost:54322/postgres' -t -c \"SELECT COUNT(*) FROM pg_policies WHERE tablename = 'objects' AND schemaname = 'storage';\" 2>/dev/null | tr -d ' ' || echo '?')\"\necho \"- Arquivos no bucket: $(psql 'postgresql://postgres:postgres@localhost:54322/postgres' -t -c \"SELECT COUNT(*) FROM storage.objects WHERE bucket_id = 'policy-documents';\" 2>/dev/null | tr -d ' ' || echo '?')\"\necho \"\"\necho \"🎯 Para testar o upload, acesse: http://localhost:8080\"\necho \"📋 Verifique os logs detalhados no console do navegador\"\n